{"name":"Open-Channel Solid State Drives","tagline":"Manage SSDs directly from your host","body":"Open-channel SSDs are devices that share responsibilities with the host\r\nin order to implement and maintain features that typical SSDs keep\r\nstrictly in firmware. These include (i) the Flash Translation Layer\r\n(FTL), (ii) bad block management, and (iii) hardware units such as the\r\nflash controller, the interface controller, and large amounts of flash\r\nchips. In this way, Open-channels SSDs can expose direct\r\naccess to their physical flash storage, while keeping a subset of the\r\ninternal features of SSDs.\r\n\r\nLightNVM is a specification that gives support to Open-channel SSDs.\r\nLightNVM allows the host to manage data placement, garbage collection,\r\nand parallelism. Device specific responsibilities such as bad block\r\nmanagement, FTL extensions to support atomic IOs, or metadata\r\npersistence are still handled by the device.\r\n\r\nThe architecture of LightNVM consists of three parts: core, media managers and\r\ntargets. The core implements shared functionality across targets. For example\r\n initialization, teardown and statistics. The block manager implements management of flash blocks in the host, and at last the targets implement the\r\ninterface that exposes physical flash to user-space applications.\r\nExamples of such targets include key-value store, object-store, as well\r\nas traditional block devices.\r\n\r\n## Documentation\r\nThe documentation is available [here](http://openchannelssd.readthedocs.org/en/latest/)\r\n\r\n## Subprojects\r\nGo to [github](openchannelssd.github.io) for all sub-projects.\r\n\r\nThe Open-Channel SSD support is divided into several pieces. Here is a short description of each project and how it relates.\r\n\r\n   - **Linux Kernel Support** ([https://github.com/OpenChannelSSD/linux](https://github.com/OpenChannelSSD/linux))\r\n   \r\n      Implements support for Open-Channel SSDs in the kernel. It is the core of identifying, managing, and using the Open-Channel SSDs.\r\n   \r\n\r\n   - **LightNVM Management Tool** ([https://github.com/OpenChannelSSD/lightnvm-adm](https://github.com/OpenChannelSSD/lightnvm-adm))\r\n      \r\n      Implements a management tool for managing the Open-Channel SSDs.\r\n   \r\n   - **liblightnvm Library** ([https://github.com/OpenChannelSSD/liblightnvm](https://github.com/OpenChannelSSD/liblightnvm))\r\n\r\n      A library that abstracts the underlying \"raw\" Open-Channel SSD device and provides abstractions such as append only, bad block management, etc.\r\n\r\n   - **RocksDB Open-Channel SSD Support** ([https://github.com/OpenChannelSSD/rocksdb](https://github.com/OpenChannelSSD/rocksdb))\r\n\r\n      Implements support in RocksDB for directly accessing Open-Channel SSDs.   \r\n\r\n## Available Hardware\r\n\r\nA number of platforms supports LightNVM:\r\n\r\n - CNEX Labs Westlake SDK.\r\n\r\n - IIT Madras SSD Controller (https://bitbucket.org/casl/ssd-controller). An open-source\r\nimplementation of a NVMe controller in BlueSpec. Can run on Xilinx\r\nFPGA's such as Artix 7, Kintex 7, and Vertex 7.\r\n\r\n - Multiple unreleased SSDs under development. They will be added here when announched.\r\n\r\n - Other platform such as OpenSSD Jasmine and OpenSSD Cosmos are able to\r\nsupport LightNVM. However, there are no compatible firmwares yet.\r\n\r\n## Specification\r\nWe are actively creating a specification as more and more of the\r\nhost/device interface is stabilized. Please see this Google document.\r\nIt is open for comments.\r\n\r\nThe specification is available as a google document [here](http://goo.gl/BYTjLI)","google":"UA-57193430-2","note":"Don't delete this file! It's used internally to help with page regeneration."}